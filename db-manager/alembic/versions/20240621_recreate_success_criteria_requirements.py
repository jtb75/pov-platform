"""
Recreate success_criteria_requirements as a simple association table
"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '20240621_recreate_success_criteria_requirements'
down_revision = '5e3a3e6b7f3d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('success_criteria_requirements')
    op.create_table('success_criteria_requirements',
    sa.Column('success_criteria_id', sa.Integer(), sa.ForeignKey('success_criteria.id', ondelete='CASCADE'), primary_key=True),
    sa.Column('requirement_id', sa.Integer(), sa.ForeignKey('requirements.id', ondelete='CASCADE'), primary_key=True)
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('success_criteria_requirements')
    op.create_table(
        'success_criteria_requirements',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('success_criteria_id', sa.Integer(), sa.ForeignKey('success_criteria.id'), nullable=False),
        sa.Column('requirement_id', sa.Integer(), sa.ForeignKey('requirements.id'), nullable=True),
        sa.Column('custom_text', sa.Text(), nullable=True),
        sa.Column('order', sa.Integer(), nullable=True),
    )
    # ### end Alembic commands ### 